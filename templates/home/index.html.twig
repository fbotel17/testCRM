{% extends 'base.html.twig' %}

{% block title %}Mon Compte
{% endblock %}

{% block body %}
	<style>
		.datalist-custom {
			position: absolute;
			top: 100%;
			left: 0;
			right: 0;
			max-height: 200px; /* Limiter la hauteur */
			overflow-y: auto; /* Ajouter un d√©filement si trop d'options */
			background-color: white;
			border: 1px solid #ccc;
			z-index: 1000;
			box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
		}

		.datalist-option {
			padding: 8px;
			cursor: pointer;
		}

		.datalist-option:hover {
			background-color: #f1f1f1;
		}

		.client-name {
			color: black;
		}
	</style>

	<div class="container my-5">
		<h1 class="text-center mb-4">üìã Mon Compte</h1>

		<div
			class="row">
			<!-- Section T√¢ches -->
			<div class="col-md-8">
				{% if taches is empty %}
					<div class="alert alert-warning text-center" role="alert">
						<strong>Aucune t√¢che trouv√©e.</strong><br>
						Vous n'avez aucune t√¢che √† faire pour le moment
					</div>
				{% else %}
					<div class="row">
						{% for tache in taches %}
							<div class="col-md-6 mb-4">
								<div class="card shadow-sm border-0">
									<div class="card-body">
										<h5 class="card-title text-primary">
											{{ tache.titre|default('T√¢che sans titre') }}
										</h5>
										<p class="card-text">
											<strong>Description :</strong>
											{{ tache.description|default('Aucune description') }}<br>
											<strong>√âtat :</strong>
											{% if tache.etat == 'Termin√©' %}
												<span class="badge bg-success">{{ tache.etat }}</span>
											{% elseif tache.etat == 'En cours' %}
												<span class="badge bg-warning">{{ tache.etat }}</span>
											{% else %}
												<span class="badge bg-secondary">{{ tache.etat }}</span>
											{% endif %}
										</p>
										<p class="text-muted small">
											<strong>Cr√©√©e le :</strong>
											{{ tache.dateCreation|date('d/m/Y H:i') }}<br>
											<strong>√âch√©ance :</strong>
											{% if tache.dateEcheance %}
												{{ tache.dateEcheance|date('d/m/Y H:i') }}
											{% else %}
												<span class="text-danger">Pas de date d'√©ch√©ance</span>
											{% endif %}
										</p>
									</div>
								</div>
							</div>
						{% endfor %}
					</div>
				{% endif %}
			</div>

			<!-- Section Carnet d'adresse -->
			<div class="col-md-4">
				<h4 class="text-center mb-4">üìá Carnet d'adresse</h4>
				<button class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#addClientModal">+ Ajouter un client</button>

				{% if clients is empty %}
					<div class="alert alert-info text-center" role="alert">
						<strong>Aucun client trouv√©.</strong><br>
						Vous n'avez aucun client dans votre carnet d'adresse.
					</div>
				{% else %}
					<div class="clients-container" style="max-height: 80vh; overflow-y: auto;">
						<ul class="list-group">
							{% for client in clients %}
								<li class="list-group-item d-flex justify-content-between align-items-center">
									<a href="#" class="client-name text-decoration-none" data-bs-toggle="modal" data-bs-target="#clientModal" data-id="{{ client.id }}" data-nom="{{ client.nom }}" data-prenom="{{ client.prenom }}" data-email="{{ client.email }}" data-societe="{{ client.societe.nom }}" data-telephone="{{ client.telephone }}" data-adresse="{{ client.societe.adresse }}">
										{{ client.nom }}
										{{ client.prenom }}
									</a>
								</li>
							{% endfor %}
						</ul>
					</div>
				{% endif %}
			</div>
		</div>
	</div>

	<!-- Modal pour ajouter un client -->
	<div class="modal fade" id="addClientModal" tabindex="-1" aria-labelledby="addClientModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="addClientModalLabel">Ajouter un client</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					<form action="{{ path('add_client') }}" method="post" id="addClientForm">
						<div class="mb-3">
							<label for="nom" class="form-label">Nom</label>
							<input type="text" class="form-control" id="nom" name="nom" required>
						</div>
						<div class="mb-3">
							<label for="prenom" class="form-label">Pr√©nom</label>
							<input type="text" class="form-control" id="prenom" name="prenom" required>
						</div>
						<div class="mb-3">
							<label for="email" class="form-label">Email</label>
							<input type="email" class="form-control" id="email" name="email" required>
						</div>
						<div class="mb-3">
							<label for="societe" class="form-label">Soci√©t√©</label>
							<input type="text" class="form-control" id="societe" name="societe" list="societesList" autocomplete="off">
							<datalist id="societesList">
								{% for societe in societes %}
									<option value="{{ societe.nom }}">{{ societe.nom }}</option>
								{% endfor %}
							</datalist>
							<div id="societeDetails" class="text-muted mt-2" style="display: none;"></div>
						</div>


						<div class="mb-3">
							<label for="telephone" class="form-label">T√©l√©phone</label>
							<input type="tel" class="form-control" id="telephone" name="telephone" required>
						</div>
						<button type="submit" class="btn btn-primary">Ajouter</button>
					</form>
				</div>
			</div>
		</div>
	</div>

	<!-- Modal Detail Client -->
	<div class="modal fade" id="clientModal" tabindex="-1" aria-labelledby="clientModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="clientModalLabel">D√©tails du client</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					<p>
						<strong>Nom :</strong>
						<span id="modalClientNom"></span>
					</p>
					<p>
						<strong>Pr√©nom :</strong>
						<span id="modalClientPrenom"></span>
					</p>
					<p>
						<strong>Email :</strong>
						<span id="modalClientEmail"></span>
					</p>
					<p>
						<strong>Soci√©t√© :</strong>
						<span id="modalClientSociete"></span>
					</p>
					<p>
						<strong>T√©l√©phone :</strong>
						<span id="modalClientTelephone"></span>
					</p>
					<p>
						<strong>Adresse Soci√©t√© :</strong>
						<span id="modalClientAdresse"></span>
					</p>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
				</div>
			</div>
		</div>
	</div>


	<!-- Modal pour ajouter une soci√©t√© -->
	<div class="modal fade" id="addSocieteModal" tabindex="-1" aria-labelledby="addSocieteModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="addSocieteModalLabel">Ajouter une soci√©t√©</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					<form id="addSocieteForm">
						<div class="mb-3">
							<label for="nomSociete" class="form-label">Nom</label>
							<input type="text" class="form-control" id="nomSociete" name="nom" required>
						</div>
						<div class="mb-3">
							<label for="adresseSociete" class="form-label">Adresse</label>
							<input type="text" class="form-control" id="adresseSociete" name="adresse" required>
						</div>
						<button type="button" class="btn btn-primary" id="createSocieteBtn">Cr√©er Soci√©t√©</button>
					</form>
				</div>
			</div>
		</div>
	</div>

	<script>
		document.getElementById('addClientForm').addEventListener('submit', function (e) {
e.preventDefault();

const societe = document.getElementById('societe').value;

// V√©rifier si la soci√©t√© existe
const societesExistantes = [...document.querySelectorAll('#societesList option')].map(opt => opt.value);

if (! societesExistantes.includes(societe)) { // Ouvrir le modal pour ajouter la soci√©t√©
const societeModal = new bootstrap.Modal(document.getElementById('addSocieteModal'));
societeModal.show();

// Pr√©-remplir le champ du nom de la soci√©t√©
document.getElementById('nomSociete').value = societe;
} else { // Soumettre directement le formulaire si la soci√©t√© existe
this.submit();
}
});

// Gestion de la cr√©ation de soci√©t√©
document.getElementById('createSocieteBtn').addEventListener('click', function () {
const formData = new FormData(document.getElementById('addSocieteForm'));

fetch('{{ path('add_societe') }}', {
method: 'POST',
body: formData
}).then(response => response.json()).then(data => {
if (data.id) {
alert('Soci√©t√© cr√©√©e avec succ√®s');
document.getElementById('addSocieteModal').classList.remove('show');
document.querySelector('.modal-backdrop').remove();

// Ajouter la soci√©t√© √† la datalist
const newOption = document.createElement('option');
newOption.value = formData.get('nom');
document.getElementById('societesList').appendChild(newOption);

// Soumettre le formulaire client apr√®s cr√©ation de la soci√©t√©
document.getElementById('addClientForm').submit();
} else {
alert('Erreur : ' + data.message);
}
}).catch(error => console.error('Erreur lors de la cr√©ation de la soci√©t√©', error));
});
	</script>


	<script>
		// Filtrer les soci√©t√©s et afficher les options
function filterSocietes() {
const input = document.getElementById('societe');
const listContainer = document.getElementById('societesList');
const searchTerm = input.value.toLowerCase();

// Effacer les anciennes suggestions
listContainer.innerHTML = '';

// Filtrer les soci√©t√©s en fonction de la saisie
societes.forEach(function (societe) {
if (societe.toLowerCase().includes(searchTerm)) {
const option = document.createElement('div');
option.classList.add('datalist-option');
option.textContent = societe;
option.addEventListener('click', function () {
input.value = societe;
listContainer.innerHTML = ''; // Effacer les suggestions apr√®s la s√©lection
});
listContainer.appendChild(option);
}
});
}
	</script>

	<script>
		document.getElementById('societe').addEventListener('input', function () {
const societeName = this.value;
const detailsContainer = document.getElementById('societeDetails');

if (societeName.trim() === '') {
detailsContainer.style.display = 'none';
detailsContainer.textContent = '';
return;
}

// Effectuer une requ√™te Ajax pour r√©cup√©rer les d√©tails de la soci√©t√©
fetch (`/societe/details?nom=${
encodeURIComponent(societeName)
}`).then(response => response.json()).then(data => {
if (data.error) {
detailsContainer.style.display = 'none';
detailsContainer.textContent = '';
} else {
detailsContainer.style.display = 'block';
detailsContainer.textContent = `Nom : ${
data.nom
}, Adresse : ${
data.adresse
}`;
}
}).catch(error => {
console.error('Erreur lors de la r√©cup√©ration des d√©tails de la soci√©t√© :', error);
detailsContainer.style.display = 'none';
detailsContainer.textContent = '';
});
});
	</script>

	<script>
		document.addEventListener('DOMContentLoaded', () => {
const clientModal = document.getElementById('clientModal');

// D√©tecte l'ouverture du modal
clientModal.addEventListener('show.bs.modal', (event) => { // Bouton ou lien d√©clencheur
const button = event.relatedTarget;

// R√©cup√©rer les donn√©es associ√©es au client
const nom = button.getAttribute('data-nom');
const prenom = button.getAttribute('data-prenom');
const email = button.getAttribute('data-email');
const societe = button.getAttribute('data-societe');
const telephone = button.getAttribute('data-telephone');
const adresse = button.getAttribute('data-adresse');

// Injecter les donn√©es dans le modal
document.getElementById('modalClientNom').textContent = nom;
document.getElementById('modalClientPrenom').textContent = prenom;
document.getElementById('modalClientEmail').textContent = email;
document.getElementById('modalClientSociete').textContent = societe;
document.getElementById('modalClientTelephone').textContent = telephone;
document.getElementById('modalClientAdresse').textContent = adresse;
});
});
	</script>


{% endblock %}
